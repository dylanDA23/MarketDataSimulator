syntax = "proto3";
package market;
option csharp_namespace = "Market.Proto";

service MarketData {
  // Bidirectional streaming: client sends SubscriptionRequest messages, server streams MarketDataMessage
  rpc Subscribe(stream SubscriptionRequest) returns (stream MarketDataMessage);
}

message SubscriptionRequest {
  string instrumentId = 1;
  bool unsubscribe = 2;
}

message MarketDataMessage {
  oneof payload {
    OrderBookSnapshot snapshot = 1;
    OrderBookUpdate update = 2;
    EmptySnapshot empty_snapshot = 3;
  }
}

message OrderBookSnapshot {
  string instrumentId = 1;
  int64 sequence = 2;
  repeated PriceLevel bids = 3;
  repeated PriceLevel asks = 4;
}

message OrderBookUpdate {
  string instrumentId = 1;
  int64 sequence = 2;
  repeated PriceLevelChange changes = 3;
}

message PriceLevel {
  double price = 1;
  double quantity = 2;
  int32 level = 3;
}

message PriceLevelChange {
  enum ChangeType { ADD = 0; UPDATE = 1; REMOVE = 2; }
  ChangeType type = 1;
  PriceLevel level = 2;
}

message EmptySnapshot {
  string instrumentId = 1;
}

